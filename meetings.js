let _allMeetings = {};
//
_allMeetings['ru'] = {};
//
_allMeetings['ru']['hole'] = {
    meta: {name: 'Дыра', values: {}},
    start: {text: ['Спустя некоторое время блужданий в этом секторе мне открывается прекрасный вид на его внутренний мир. Казалось бы, я давно уже должен был оказаться в его центре, но всё никак не могу его достичь.',
            'Мне стоило раньше обратить на это внимание - обернувшись, всё позади вдруг стало странно больше. А тот бескрайний лес, в котором я сейчас нахожусь, ещё минуту назад казался тремя соснами.',
            'Надо же, в этом секторе умещается целый отдельным мир, возможно такой же, каков и внешний. Размышлял я, пока не наткнулся на странника. Внешне он был не опасен, скорее всего это такой же исследователь, как и я.',
            'Он подошел ко мне. Только сейчас я заметил, что он уже очень стар. Он протягивает мне руку с каким то предметом, явно показывая, что хочет отдать...'
        ],choice: [
            {name: 'Взять', root: 'pick'},{name: 'Ничего не делать', root: 'not'},
        ]}, pick: {text: ['Стоило мне попытаться взять предмет, который он давал мне, он тут же убрал руку под свой плащ. После он бросил на меня недовольный взгляд, развернулся и начал уходить...',
            'Но вдруг заговорил. Говорил он о том, что одалела его жадность, когда он посетил данный сектор. Нет ему больше выхода отсюда, поскольку один шаг внутрь равняется тысяче шагов назад.',
            'По моей спине пробежал холод. Пусть я и шел всего три минуты, зато возвращаться отсюда мне придётся двое суток. Дед после добавил, что пытался добраться до центра около полугода из-за желания поживиться добром. Как так получилось, что мы с ним встретились - непонятно.',
            'После он окончательно ушёл, обратно в центр. Мне ничего не оставалось, как просто развернуться и начать этот очень долгий путь назад из сектора. Я потеряю на это очень много сил и времени...',
        ],choice: [
            {name: 'Начать путь', root: 'bads'},
        ]},not: {text: ['Немая сцена длилась около половины минуты, пока дед не заулыбался и не нарушил тишину.',
            'Он рассказал мне, как оказался здесь - как пытался достичь центра полгода и даже не подозревал, что один шаг внутрь приравнивается к тысяче шагов назад. Для меня эта информация оказалась крайне неприятной. Я отвернулся от деда, уставившись на внешний мир, и тут он меня окликнул...',
            'В этот раз он сам взял меня за руку и дал мне два предмета, конвертик из очень старой потёртой бумаги и несколько зарядов радара. Он добавил, что конверт может вернуть назад, но воспользоваться им может только тот, кому его отдали, если же ты его забрал, то ничего не получится.',
            'Я вдруг похвалил себя за изначальный выбор бездействовать. В голове так и крутились мысли, вдруг в этом правиле есть какой-то изьян, может, получиться вернуть деда. Я пытался найти информацию в конверте, бегло читая весь текст, который мог разобрать.',
            'Воздух вокруг меня переменился, я отрываю голову от конверта - ни огромного внешнего мира, ни деда уже нет. Конверт тут же рассыпался в руках, я оказался совсем рядом с сектором. Понемногу приходя в себя я начал двигаться дальше...',
        ],choice: [
            {name: 'Проверить радары', root: 'item'},
        ]},item: {
            callback: (obj) => {if(mrthInventoryFreeSpace()) {obj.root = 'get'; return 'root'} else {obj.root = 'money'; return 'root'}
        }},get: {
            callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('radar')); spartMrthGoodIssue()},
            text: ['Радары хоть и старые, но ещё вполне себе рабочие, думаю, я могу оставить их себе, пригодятся.', '...']
    },money: {
        callback: (obj) => {var points = itemFunc.getHonestCost(40); mapMeta.points += points; obj.result = `Вы получили ${points} монет.`; spartMrthGoodIssue(true)},
        text: ['Радары уже слишком старые, да и места у меня не было, чтобы их оставить. Поэтому я решил продать их первому встречному скупщику за монеты.', '...']
    },bads: {
        callback: (obj) => {mapMeta.points = Math.round(mapMeta.points*0.8); obj.result = `Вы потеряли 20% монет.`; spartMrthBadIssue()},
    },end: {}
};
//
_allMeetings['ru']['tower'] = {
    meta: {name: 'Мельница', values: {used: false}},
    start: {text: ['На этом секторе мне повезло найти высокую мельницу, пусть и заброшенную. Располагалась она на небольшом возвышении, вокруг неё простирались уже окончательно заросшие пшеничные поля.',
            'Подойдя к ней я принялся обходить её со всех сторон и пытаться проникнуть внутрь - нужно найти хотя бы небольшую щель или слабую деревянную перегородку. Обойдя её вокруг два раза я сделал для себя открытие - каждый раз, когда я отворачиваюсь от мельницы и снова смотрю на неё, все её гнилые дощечки, бревна, камни у фундамента и столбы странным образом меняют своё положение.',
            'Пройдя ещё два круга мне повезло скажем так «сгенерировать» себе проход внутрь. Перед входом я подумал дважды, ведь внутри я не смогу видеть всей мельницы сразу. Да и вдруг я более не смогу выйти и стану там заложником? Эта мысль меня напугала, и я встал прямо у входа и посмотрел наверх, как раз на верхушку башни, чтобы подумать третий раз...',
        ],choice: [
            {name: 'Войти', root: 'enter'},{name: 'Ничего не делать', root: 'not'},
        ]}, enter: {
        callback: () => {return [mrthGetItem('radar') !== false, true]},
        text: ['Я решил рискнуть и войти в башню. Внутри она оказалась недвижимой - она сохраняет тот облик, в котором я её видел снаружи последний раз. Видимо она меняет своё строение для меня только когда я снаружи. Это радует, осталось только найти способ подняться наверх.',
            'В конце концов, мне сейчас очень не помешает запечатлеть местность с достаточно большой высоты. По мере того, как взбирался ввысь я начал замечать, что мельница всё же не перестала меняться. Точнее она просто без конца удлиняется вверх. Посмотрев вниз я понял, что за долгие попытки подняться на мельницу по хрупким конструкциям я преодолел полметра от силы.',
            'Однако ощущение высоты мне говорило, что на самом деле я достаточно высоко. Я был рядом с дверцей, сквозь щели которой завывал такой ветер, какой бывает только на высоте птичьего полёта. Я уже хотел выйти и убедиться в том, что я очень высоко, но дверца была заперта. После недолгих попыток поднять щеколду на другой стороне я смог выйти и осмотреться.',
        ],choice: [
            {name: 'Использовать 1 радар', root: 'radar'},{name: 'Просто осмотреться', root: 'view'},
        ]},radar: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('radar')); obj.values.used = 'radar'},
        text: ['Использовав карманный радар я смог быстро запечатлеть всё то, что было видно ему с этой высоты, до мельчайших деталей. Осмотревшись ещё раз я спустился вниз мельницы и покинул её. Уходя я отметил на своей карте четыре интересных места, которые нужно посетить как можно скорее.', '...'],
    },view: {
        callback: (obj) => {obj.values.used = 'view'},
        text: ['Зарядов радара у меня с собой не было, а он бы мог сейчас помочь мне запечатлеть побольше. Осмотревшись ещё раз я спустился вниз мельницы и покинул её. На карте я отметил себе пару интересных мест, которые смог увидеть, нужно будет их посетить в ближайшее время.', '...'],
    },not: {text: ['Откажусь сегодня от удовольствия сойти с ума в замкнутом и постоянно меняющемся пространстве. Ещё раз вдоволь походив вокруг башни и посмотрев на неё, я не обнаружил больше никаких интересных странностей. Только кем-то потерянный планшет с двадцатью пятью серебряных.',
            'Искать тут более нечего, мне нужно продолжать исследования, поэтому я отправился от мельницы прочь.', '...'
        ],},end: {
        callback: (obj) => {
            if(obj.values.used !== false) {
                if(obj.values.used == 'radar') {setTimeout(() => {mapGenerateSpoilers(4); obj.result = 'Вы нашли 4 полезных сектора.'; spartMrthGoodIssue()}, 1500)}
                else {setTimeout(() => {mapGenerateSpoilers(2); obj.result = 'Вы нашли 2 полезных сектора.'; spartMrthGoodIssue()}, 1500)}
            } else {var points = itemFunc.getHonestCost(30); mapMeta.points += points; obj.result = `Вы получили ${points} монет.`; spartMrthGoodIssue(true)}
        }}
};
//
_allMeetings['ru']['shop'] = {
    meta: {name: 'Рынок', values: {}},
    start: {
        callback: (obj) => {obj.values.cost = itemFunc.getHonestCost(50); return [mrthInventoryFreeSpace(), mrthInventoryHaveItems(), true]},
        text: ['Мне повезло обнаружить в этом секторе небольшой рынок. При необходимости здесь можно будет продать или купить что-нибудь нужное для исследований.',
            'А не повезло с тем, что у меня очень мало времени. Я не успею толком поторговать, и мне очень повезёт если я успею сделать хотя бы одну сделку.',
            'Что мне сейчас нужнее?',
        ],choice: [
            {name: 'Купить', root: 'buy'},{name: 'Продать', root: 'sell'},{name: 'Уйти', root: 'leave'},
        ]},leave: {
        callback: (obj) => {obj.result = 'Вы просто ушли.'; spartMrthBadIssue()},
        text: ['Нет у меня времени на торговлю, как и лишних вещей. Подумал я и направился прочь из сектора.', '...']
    },buy: {
        callback: (obj) => {return [mapMeta.points >= obj.values.cost, mapMeta.points >= obj.values.cost, true]},
        text: ['Пробегая мимо всех торгашей я обратил внимание на прилавок "Артефакты", тут были полезные предметы для особых секторов. Думаю, было бы неплохо прикупить что-то одно...'],
        extrastring: (obj) => {return `Стоимость каждого предмета: ${obj.values.cost} монет.`},
        choice: [
            {name: 'Крутые очки', root: 'glasses'},{name: 'Шоколадка', root: 'cake'},{name: 'Ничего не покупать', root: 'leave'},
        ]},glasses: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('glasses')); mapMeta.points -= obj.values.cost; spartMrthGoodIssue()},
        text: ['Расчитавшись за очки я ринулся продолжать исследование, будучи более весёлым после успешной покупки.', '...'],
    },cake: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('chocolate')); mapMeta.points -= obj.values.cost; spartMrthGoodIssue()},
        text: ['Расчитавшись за "Шоколадку" я ринулся продолжать исследование, будучи более весёлым после успешной покупки.', '...'],
    },sell: {
        callback: () => {return [mrthGetItem('marathon_key') !== false, mrthGetItem('universal_key') !== false, true]},
        text: ['Пробегая мимо всех торгашей я обратил внимание на прилавок "Скупка ключей", тут можно будет продать лишний завалявшийся ключик. Дают тут за ключи несколько монет, думаю, это стоит того...'],
        extrastring: (obj) => {return `За продажу любого предмета вы получите ${obj.values.cost} монет.`},
        choice: [
            {name: 'Ключ от марафона', root: 'marathon_key'},{name: 'Универсальный ключ', root: 'universal_key'},{name: 'Ничего не продавать', root: 'leave'},
        ]},marathon_key: {
        callback: (obj) => {obj.result = 'Вы продали "Ключ от марафона".'; mrthDeleteItem('marathon_key'); mapMeta.points += obj.values.cost; spartMrthGoodIssue(true)},
        text: ['Получив свои деньги за ключ я ринулся продолжать исследование, будучи более весёлым после успешной продажи.', '...']
    },universal_key: {
        callback: (obj) => {obj.result = 'Вы продали "Универсальный ключ".'; mrthDeleteItem('universal_key'); mapMeta.points += obj.values.cost; spartMrthGoodIssue(true)},
        text: ['Получив свои деньги за ключ я ринулся продолжать исследование, будучи более весёлым после успешной продажи.', '...']
    },
    end: {},
};
//
_allMeetings['ru']['tyan'] = {
    meta: {name: 'Опасная девушка', values: {}},
    start: {text: ['Этот сектор буквально ничего мне не дал, несмотря на то, что я потратил на него очень много времени. Уходя я то и дело оборачивался, потому что мои поиски хоть чего-то прервали чужие разборки, и чтобы не стать их участником мне пришлось под шумок уходить отсюда.',
            'Я уже достаточно далеко ушёл, чтобы не беспокоиться, что что-то может пойти не так. Но ощущение того, что за мной наблюдают, всё никак не проходит. То и дело мне послышится шорох справа, или как кто-то вспарил прямо надо мной с крыши на крышу. Да, я покидаю заброшенный город, к сожалению, уже полностью разворованный.',
            'Вновь слышу шаги, это тихие шаги сзади. Создаётся ощущение, что шаги постепенно приближаются ко мне. Я до этого всегда оборачивался на малейший шорох, однако сейчас боюсь этого делать, потому что точно уверен, что мне это не кажется.',
        ],choice: [
            {name: 'Убежать [30%]', root: 'r_run'},{name: 'Развернуться', root: 'check'},
        ]},check: {
        callback: () => {return [true, mrthGetItem('bribery') !== false]},
        text: ['Только я начал разворачиваться как шаги ускорились - в меня устремился какой-то тёмный силуэт. Он сбил меня с ног, уселся на меня и начал угрожать ударом по лицу. На исследователя явно не похож, скорее всего разбойник. А если разбойник то скорее всего меня не оставят в живых.'
        ],choice: [
            {name: 'Попытаться ударить [40%]', root: 'r_hit'}, {name: 'Откупиться', root: 'bribery'},
        ]},saved: {
        callback: (obj) => {obj.result = 'Вы спаслись.'; spartMrthGoodIssue()},
        text: ['Верное решение, сделанное мною вовремя, помогло мне избежать плохих последствий. Я смог удрать от безумца и спокойно покинуть сектор. Мне стоит немного передохнуть, после я смогу продолжить исследования...', '...'
        ]},run_bad: {
        callback: () => {return [true, mrthGetItem('bribery') !== false]},
        text: ['Стоило мне ускорить шаг как незнакомец сзади тоже ускорил его. Да и ещё как ускорил - мы и десяти секунд не пробежали, как я услышал рывок и ощутил идущий за рывком удар сзади. Во время рывка она крикнула, и да, это была она, судя по голосу.',
            'Я упал на бок, нападавшая развернула меня на спину, уселась на меня и начала угрожать ударом по лицу. На исследователя явно не похожа, скорее всего разбойница. А если разбойница то, скорее всего, меня не оставят в живых.'
        ],choice: [
            {name: 'Ничего не делать', root: 'not'},{name: 'Откупиться', root: 'bribery'},
        ]},not: {callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('black')); spartMrthBadIssue()},
        text: ['Спустя некоторое время бездействия разбойница поняла, что я не опасен, она покопалась в моей сумке, что-то сунула в неё и, угрожая уже ножом, слезла с меня и скрылась в ночи. Я не хотел бить её первым, меня смутило то, что это была девушка.',
            'Проверив сумку, я к величайшему разочарованию обнаружил, что она подсунула мне чёрную метку. Это точно не к добру - подумал я и начал более активно покидать сектор.', '...'
        ]},bribery: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('bribery')); obj.result = 'Вы откупились.'; spartMrthGoodIssue()},
        text: ['Точным и медленным движением руки я достаю заначку - пачку денег. Все разбойники падки на деньги, и возможно, у меня получится откупиться. Тут разбойник снимает капюшон и к моему большому удивлению я узнаю, что напавшим на меня разбойником была девушка.',
            'Она фыркнула глядя на меня, взяла деньги из моих рук и спрятала их в своём плаще. После она помогла мне встать, и, осмотревшись хорошенько вокруг, удалилась. Я стал участником крайне странной сцены, которая, к счастью, для меня закончилась вполне благополучно. Я покинул данный сектор и продолжил исследования...', '...'
        ]},hit_bad: {
            callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('black')); spartMrthBadIssue()},
            text: ['Я попытался ударить разбойника локтем по голове, но тщетно - я лишь слегка задел по лбу, сняв капюшон. И вдруг на мне уже не грозный разбойник, а девушка, которая прямо сейчас замахивается на меня.',
            'После я очнулся уже один. После удара я чувствовал, как она роется в моей сумке. Проверив сумку, я к величайшему разочарованию обнаружил, что она подсунула мне чёрную метку. Это точно не к добру - подумал я и начал более активно покидать сектор.', '...'
        ]},
    r_hit: {callback: (obj) => {obj.root = Math.random() <= 0.4 ? 'saved' : 'hit_bad'; return 'root'}},
    r_run: {callback: (obj) => {obj.root = Math.random() <= 0.3 ? 'saved' : 'run_bad'; return 'root'}},
    end: {},
};
//
_allMeetings['ru']['labyr'] = {
    meta: {name: 'Лабиринт', values: {}},
    start: {text: ['В этом секторе мне «повезло» заблудиться в лабиринте. Каменный лабиринт с очень высокими стенами, нигде нет ни подсказок, ни способов вернуться назад. Подняться на стену тоже никак не получается - гладкие как лёд, да ещё и дождь недавно прошёл.',
            'Навязчивые мысли, что я могу застрять здесь непросто надолго, а может быть и навсегда, постоянно лезли мне в голову. Вот что точно сейчас не нужно - паниковать. Подумал я и встал, чтобы перевести дух и выровнять дыхание. Я вышел, вроде бы, на знакомую развилку. Куда мне бы тут пойти...',
        ],choice: [{name: 'Пойти налево [35%]', root: 'check'}, {name: 'Пойти направо [35%]', root: 'check'}]
    },var1: {
        text: ['В этот раз пойду сюда. Стены невыносимо давят на меня своей громоздкостью, из-за их высоты проходы кажутся слишком узкими, настолько, что когда задумываешься над этим, становится труднее дышать. Снова развилка, куда в этот раз?'
        ],choice: [{name: 'Пойти налево [35%]', root: 'check'}, {name: 'Пойти направо [35%]', root: 'check'}]
    },var2: {
        text: ['Поверну сюда. Каждый мой шаг по мокрому бетону разносится долгим, затяжным эхом по всему лабиринту. Иногда я просто вставал и пытался прислушаться, может, удастся услышать хоть какие-то звуки, кроме тех, что издаю я.',
            'Но все мною изданные ранее звуки унеслись эхом по тоннелям и превратились в гул, в котором тяжело хоть что-то услышать.'
        ],choice: [{name: 'Пойти налево [35%]', root: 'check'}, {name: 'Пойти направо [35%]', root: 'check'}]
    },var3: {
        text: ['Это никогда не закончится - подумал я на очередной развилке, продолжив блуждания. В голове я то и дело пытался придумать способ как-то отмечать уже пройденные места. Размотать очень длинную верёвку, делать пометки на стенах или оставлять какие-нибудь предметы на развилках... ',
            'Видимо, придётся моим идеям остаться в моей голове, никаким из этих способов я, пожалуй, так и не воспользуюсь.'
        ],choice: [{name: 'Пойти налево [35%]', root: 'check'}, {name: 'Пойти направо [35%]', root: 'check'}]
    },var4: {
        text: ['В этот раз пойду сюда. Где-то я слышал, что чтобы гарантированно прочесать весь лабиринт, то нужно делать три поворота налево, а один направо. Или там нужно делать только два поворота? Я явно зря полез в этот лабиринт с таким-то скудным багажом знаний о лабиринтах...'
        ],choice: [{name: 'Пойти налево [35%]', root: 'check'}, {name: 'Пойти направо [35%]', root: 'check'}]
    },check: {
        callback: (obj) => {if(Math.random() <= 0.35) {obj.root = 'exit'} else {obj.root = `var${Math.floor(1+Math.random() * 3.999)}`}; mapMeta.points -= Math.floor(mapMeta.points * 0.08); return 'root'}
    },exit: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('tax')); spartMrthBadIssue()},
        text: ['За очередной развилкой показалось нечто - ворота в стене, из которых бьёт уже рассвет. Зашёл я в лабиринт, вроде бы в обед. Надо же, прошли почти сутки, я почти всё это время беспрестанно бродил. Радоваться спасению уже нет сил - нужно отдохнуть и возвращаться к работе.', '...']
    },end: {}
};
//
_allMeetings['ru']['ded'] = {
    meta: {name: 'Дед', values: {}},
    start: {callback: (obj) => {obj.values.cost = itemFunc.getHonestCost(40); return [mapMeta.points >= obj.values.cost, mrthInventoryHaveItems(), true]},
        text: ['Лесная тропа, сельская местность, где-то между секторов, очень снежная прохладная местность, равноудалённая от всей цивилизации. Интересное, красивое место, иногда попадаются особенно завораживающие дома, украшенные крайне сложной резьбой по дереву.',
            'На перекрёстке, где горит один единственный, как мне казалось, фонарь на всё поселение, стоял дед и играл на маленькой гармошке. Он был сверху донизу укутан в тёплую одежду, на его голове уже скопилась небольшая кучка снега. Он что-то пытался играть, смотря при этом вниз, на шапку, которая лежала перед ним на снегу.',
            'Проходя мимо я заметил, что ничего, кроме снега, в его шапке нет. Это мало удивительно, ведь место на настолько людное, чтобы вот так зарабатывать себе на жизнь. Но мне почему-то стало его жаль, и мне вдруг захотелось хоть как-то улучшить его день, дать ему что-нибудь...'
        ], extrastring: (obj) => {return `Вы можете отдать ${obj.values.cost} монет или случайный предмет.`},
        choice: [
            {name: 'Монеты', root: 'money'},{name: 'Случайный предмет', root: 'item'},{name: 'Ничего', root: 'not'},
        ]},not: {callback: (obj) => {obj.result = `Вы ничего не сделали.`; spartMrthBadIssue()},
            text: ['Проходя мимо него я сделал вид, что бурно ищу что-то у себя в карманах, но, к сожалению, ничего подходящего не нашлось. Он на миг взглянул на меня, мой жест привлёк его внимание, его наидобрейшие глаза были полны надежды на то, что хотя бы я смогу ему хоть что-то дать. Но увы, этому не суждено быть.',
            'Уходя я чувствовал себя плохим человеком, хотя ничего не сделал. Наверное в этом, как раз, и проблема - я ничего не сделал...', '...'
        ]},money: {callback: (obj) => {mapMeta.points -= obj.values.cost; obj.root = 'donat'; return 'root'}},
    item: {callback: (obj) => {mrthDeleteRandomItem(); obj.root = 'donat'; return 'root'}},
    donat: {callback: (obj) => {
            spartMrthGoodIssue();
            if(mapMeta.effects[1] !== false) {obj.result = `Вы избавились от "${mrthStuff.items[mapMeta.effects[1].tag].name}".`; mrthDeleteItem(mapMeta.effects[1].tag); return};
            if(mapMeta.effects[2] !== false) {obj.result = `Вы избавились от "${mrthStuff.items[mapMeta.effects[2].tag].name}".`; mrthDeleteItem(mapMeta.effects[2].tag); return};
            obj.result = 'Вы сделали что-то хорошее.';
        },text: ['Я поднял его шапку, отряхнул её от снега и вручил владельцу вместе с тем, что было не жалко. Он ничего не сказал мне, лишь бросил на меня полный радости взгляд, который вмиг заставил меня забыть о том, что я что-то отдал ради этого. Это того стоило - дед отправился домой согреваться, а я уже более радостный после хорошего поступка продолжил путь.',
            'Дед не выглядел как какой-нибудь священник, однако после этой короткой встречи с ним я как будто избавился от тяжёлой ноши на душе.', '...'
        ]},end: {}
};
_allMeetings['ru']['abandoned'] = {
    meta: {name: 'Заброшка', values: {}},
    start: {
        text: [
            'Среди густого леса я наткнулся на полуразрушенное здание, заросшее плющом. Его стены покрыты трещинами, а окна давно лишились стёкол. Ветер шевелит обрывки старых обоев, создавая ощущение, будто здание дышит.',
            'Перед входом лежит ржавая табличка с едва различимой надписью: "Опасность. Не входить." Однако, изнутри доносится слабый мерцающий свет, будто кто-то или что-то там есть.',
            'Я почувствовал лёгкий холодок по спине. Это место явно хранит какую-то тайну...'
        ],
        choice: [
            {name: 'Войти внутрь', root: 'enter'},
        ]
    },
    enter: {
        text: [
            'Шагнув внутрь, я оказался в просторном зале с высокими потолками. Пол провалился в нескольких местах, обнажая тёмные подвалы. Мерцающий свет исходил от странного кристалла, лежащего на полу в центре комнаты.',
            'Кристалл пульсировал мягким синим светом, словно призывая взять его. Но вокруг него были разбросаны кости и рваная одежда — явное предупреждение.',
            'Я почувствовал, как воздух вокруг стал гуще, а тени на стенах начали двигаться...'
        ],
        choice: [
            {name: 'Взять кристалл', root: 'take'},
            {name: 'Выйти, пока не поздно', root: 'escape'}
        ]
    },
    take: {
        text: [
            'Как только я коснулся кристалла, свет погас, а здание затряслось. Стены начали рушиться, а из темноты раздался низкий рык. Я бросился к выходу, но дверь исчезла, заменившись кирпичной стеной.',
            'Кристалл в моей руке стал ледяным, и его холод начал распространяться по телу. Я почувствовал, как силы покидают меня...'
        ],
        choice: [
            {name: 'Попытаться разбить кристалл', root: 'break'},
            {name: 'Держаться до последнего', root: 'hold'}
        ]
    },
    break: {
        text: [
            'Собрав последние силы, я ударил кристалл о пол. Он треснул, выпуская вспышку ослепительного света. Тьма отступила, а здание затихло.',
            'Осколки кристалла рассыпались в пыль, но я почувствовал, что часть его энергии осталась во мне. Она грела, но вместе с тем вызывала лёгкое головокружение...'
        ],
        // Здесь должен быть код для наложения "дебаффа"
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('order')); spartMrthBadIssue(); return [true]},
        choice: [
            {name: 'Покинуть здание', root: 'end'}
        ]
    },
    hold: {
        text: [
            'Я сжал кристалл в руке, пытаясь противостоять холоду. Внезапно его свет вспыхнул с новой силой, и тени отступили. Здание перестало трястись, а дверь снова появилась.',
            'Кристалл растворился в моей ладони, оставив лишь тёплое ощущение. Я почувствовал прилив сил, будто получил часть его энергии...'
        ],
        // Здесь должен быть код для выдачи награды (например, бонус к здоровью или навыкам)
        callback: (obj) => {
            if(mrthInventoryFreeSpace()) {
                obj.result = mrthInventoryComment(mrthInventoryAddItem('joker'));
                spartMrthGoodIssue()
            } else {
                var c = itemFunc.getHonestCost(60);
                mapMeta.points += c;
                spartMrthGoodIssue(true);
                obj.result = `Вы получили ${c} монет.`
            }
            return [true]},
        choice: [
            {name: 'Покинуть здание', root: 'end'}
        ]
    },
    escape: {
        text: [
            'Я развернулся и побежал к выходу. Как только я переступил порог, дверь захлопнулась за моей спиной, а здание издало громкий стон.',
            'Оглянувшись, я увидел, что окна погасли, а само здание будто сжалось, став ещё более мрачным. Я был рад, что вовремя ушёл...'
        ],
        // Здесь может быть код для небольшого бонуса (например, монеты или лёгкий бафф)
        callback: (obj) => {
            var c = itemFunc.getHonestCost(30);
            mapMeta.points += c;
            spartMrthGoodIssue(true);
            obj.result = `Вы получили ${c} монет.`
            return [true]},
        choice: [
            {name: 'Уйти', root: 'end'}
        ]
    },
    end: {}
};
_allMeetings['ru']['wasteland'] = {
    meta: {name: 'Пустырь', values: {}},
    start: {
        text: [
            'Я оказался на бескрайнем пустыре, где ветер гонит по земле клубы пыли. Солнце палит нещадно, а вокруг — лишь редкие сухие кусты да обломки древних построек.',
            'Впереди виднеется едва заметная тропа, ведущая вглубь пустоши. Справа — полуразрушенная каменная арка, а слева — небольшой холм, с которого, возможно, открывается вид на окрестности.'
        ],
        choice: [
            {name: 'Пойти по тропе', root: 'path'},
            {name: 'Осмотреть арку', root: 'arch'},
            {name: 'Подняться на холм', root: 'hill'}
        ],
        callback: (obj) => {
            // generate effects
            obj.values.buff = getPermanentEffect(true);
            obj.values.debuff = getPermanentEffect(false, false, 0.75);
            obj.values.extra = `Напиток изменит множители. ${commentPermanentEffect(obj.values.buff)}, в то же время ${commentPermanentEffect(obj.values.debuff)}`;
            obj.result = 'Вы отказались от зелья.'
        },
    },
    path: {
        text: [
            'Тропа оказалась длиннее, чем я думал. С каждым шагом пейзаж вокруг становился всё более однообразным, а в воздухе витал странный, почти металлический запах.',
            'Вдруг я заметил вдалеке силуэт. Это был странный камень, покрытый трещинами, из которых сочился слабый фиолетовый свет. Он явно не принадлежал этому миру...'
        ],
        choice: [
            {name: 'Подойти к камню', root: 'stone'},
            {name: 'Обойти его стороной', root: 'avoid'}
        ]
    },
    arch: {
        text: [
            'Подойдя к арке, я обнаружил, что она покрыта древними символами, которые слегка светились при моём приближении. Казалось, они реагируют на моё присутствие.',
            'За аркой лежал небольшой предмет — потрёпанный свиток с печатью, которая рассыпалась в прах, как только я протянул к нему руку...'
        ],
        choice: [
            {name: 'Развернуть свиток', root: 'scroll'},
            {name: 'Оставить его', root: 'leave_it'}
        ]
    },
    hill: {
        text: [
            'С вершины холма открылся вид на пустырь. Я увидел, что в центре этой пустоши стоит одинокое дерево с чёрными листьями, хотя вокруг не было ни единого признака жизни.',
            'От дерева тянулась длинная тень, которая, как мне показалось, двигалась независимо от ветра...'
        ],
        choice: [
            {name: 'Подойти к дереву', root: 'tree'},
            {name: 'Спуститься обратно', root: 'go_back'}
        ]
    },
    stone: {
        text: [
            'Прикоснувшись к камню, я почувствовал, как его энергия пронзила мою руку. Трещины вспыхнули ярче, и перед глазами промелькнули образы далёких миров...',
            'Когда видения рассеялись, я заметил, что камень исчез, а на его месте остался лишь небольшой след опалённой земли.'
        ],
        // Здесь может быть код для временного эффекта (например, изменение восприятия мира)
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    avoid: {
        text: [
            'Я решил не рисковать и обошёл камень. Однако, стоило мне отойти на несколько шагов, как я услышал тихий звон, будто кто-то провёл пальцем по краю хрустального бокала.',
            'Звук шёл оттуда, где был камень, но оглянувшись, я увидел лишь пустоту...'
        ],
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    scroll: {
        text: [
            'Свиток оказался картой, но не этой местности. На ней были изображены звёзды и планеты, расположенные в странном порядке. Внизу красовалась надпись: "Там, где сходятся тени".',
            'В тот момент, когда я попытался понять её смысл, чернила начали стекать с пергамента, оставляя лишь чистый лист...'
        ],
        // Здесь может быть код для добавления "ключа" к будущему событию
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    leave_it: {
        text: [
            'Я оставил свиток на месте. Как только я отошёл, печать на нём восстановилась, а сам он исчез в вспышке синего пламени.',
            'От него не осталось и следа, лишь лёгкий запах гари ещё витал в воздухе...'
        ],
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    tree: {
        text: [
            'Подойдя к дереву, я увидел, что его ствол покрыт шрамами, будто кто-то вырезал на нём письмена. Листья шептались на непонятном языке, а тень дерева тянулась ко мне, словно пытаясь коснуться.',
            'Я почувствовал, как что-то тянет меня вниз, к корням... но внезапно шепот прекратился, и дерево замерло.'
        ],
        // Здесь может быть код для скрытого эффекта (например, метка для будущей встречи)
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    go_back: {
        text: [
            'Я спустился с холма, так и не приблизившись к дереву. Однако, даже на расстоянии, я чувствовал его взгляд — будто оно следило за мной, пока я не скрылся из виду.',
            'Пустырь снова погрузился в безмолвие, нарушаемое лишь шелестом песка под ногами...'
        ],
        choice: [
            {name: 'Продолжить путь', root: 'final'}
        ]
    },
    final: {
        text: [
            'После долгого блуждания я вышел к одинокому шатру, стоящему посреди пустоши. У входа сидел старик в тёмных одеждах. Его глаза светились неестественным жёлтым светом.',
            'Он поднял голову и улыбнулся: "Ты пришёл как раз вовремя. Я могу предложить тебе кое-что... особенное."',
            'В его руке появился небольшой сосуд с дымящейся жидкостью. "Этот напиток откроет тебе то, что скрыто. Но будь осторожен — не всякая правда приносит радость."'
        ],
        extrastring: (obj) => {return obj.values.extra},
        choice: [
            {name: 'Выпить напиток', root: 'drink'},
            {name: 'Отказаться', root: 'end'}
        ]
    },
    drink: {
        callback: (obj) => {
            spartMrthGoodIssue();
            applyPermanentEffect(obj.values.buff);
            applyPermanentEffect(obj.values.debuff);
            obj.result = 'Вы выпили напиток.';
            obj.root = 'end'; return 'root'
        }
    },
    end: {callback: (obj) => {spartMrthBadIssue()}}
};
_allMeetings['ru']['city_danger'] = {
    meta: {name: 'Городская западня', values: {}},
    start: {
        text: [
            'Городские переулки, обычно шумные и полные жизни, сегодня были подозрительно пустынны. Ветер гнал по мостовой обрывки бумаги, а из темноты подворотен за мной следили чужие глаза.',
            'Внезапно путь преградили двое: один — коренастый, с ножом на поясе, другой — тощий, с хищной ухмылкой. "Ну что, путник, — прошипел тощий, — решил прогуляться по нашим улицам?"'
        ],
        choice: [
            {name: 'Попытаться договориться', root: 'negotiate'},
            {name: 'Бежать', root: 'escape'}
        ]
    },

    // Основной рут 1: Переговоры
    negotiate: {
        callback: (obj) => {return [mrthGetItem('bribery') !== false, true]},
        text: [
            'Я поднял руки, показывая, что не ищу конфликта. "Я просто прохожий, — сказал я. — Может, решим это мирно?"',
            'Коренастый бандит засмеялся: "Мирно? Хорошо. У нас два варианта: или ты отдаёшь всё, что при тебе, или... мы сами возьмём — с процентами."',
            '*чтобы откупиться нужна "Пачка денег"'
        ],
        choice: [
            {name: 'Откупиться', root: 'pay'},
            {name: 'Отказаться', root: 'fight'}
        ]
    },

    // Основной рут 2: Попытка бегства
    escape: {
        text: [
            'Я резко развернулся и бросился в узкий переулок. За спиной раздались крики: "Держи его!"',
            'Сердце колотилось, ноги скользили по мокрому камню. Впереди — развилка: налево — тупик с высокой стеной, направо — шумная улица, но там могут быть их сообщники...'
        ],
        choice: [
            {name: 'Прыгнуть через стену', root: 'wall'},
            {name: 'Свернуть к улице', root: 'street'}
        ]
    },

    // Ветвь 1.1: Откуп
    pay: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('bribery')); obj.result = 'Вы откупились.'; spartMrthGoodIssue(); return [true]},
        text: [
            'Я достал заначку и бросил её бандитам. Тощий ловко поймал её, взвесил в руке и усмехнулся: "Маловато... Но ладно, сегодня мы добрые."',
            'Они расступились, давая пройти. Но когда я отходил, коренастый пнул меня в спину: "В следующий раз носи больше, щедрый!"'
        ],
        // Код: потеря всех денег (большое наказание)
        choice: [
            {name: 'Уйти, стиснув зубы', root: 'ending'}
        ]
    },

    // Ветвь 1.2: Драка
    fight: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('salad')); spartMrthBadIssue(); return [true]},
        text: [
            '"Ты ошибся", — сказал я и ударил тощего в челюсть. Он рухнул, но коренастый тут же ударил меня в бок.',
            'Боль пронзила тело, но я успел свалить и его. Оба бандита лежали без сознания, а я медленно с болью в боку отправился прочь...'
        ],
        // Код: потеря 50% здоровья (небольшое наказание)
        choice: [
            {name: 'Доползти до лекаря', root: 'ending'}
        ]
    },

    // Ветвь 2.1: Прыжок через стену
    wall: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('tax')); spartMrthBadIssue(); return [true]},
        text: [
            'Я прыгнул, ухватился за край стены и перекатился на другую сторону. Но приземление оказалось неудачным — я услышал хруст и почувствовал острую боль в ноге.',
            'Бандиты не стали преследовать. "Всё равно сдохнешь здесь, калека!" — крикнул кто-то сверху.'
        ],
        // Код: перелом ноги (скорость -30% на 1 час)
        choice: [
            {name: 'Ползти в сторону огней', root: 'ending'}
        ]
    },

    // Ветвь 2.2: Улица с сообщниками
    street: {
        callback: (obj) => {
            mapMeta.points -= Math.round(mapMeta.points * 0.33);
            obj.result = `У вас отобрали 33% монет.`;
            spartMrthBadIssue();
            return [true]
        },
        text: [
            'Я выбежал на улицу, но прямо передо мной стояли ещё трое. "Ну что, — ухмыльнулся один, — гость пожаловал!"',
            'Меня скрутили, обыскали и забрали треть моих монет. "Спасибо за подарок, — сказал главарь. — А теперь вали, пока цел."'
        ],
        // Код: потеря 50% денег (небольшое наказание)
        choice: [
            {name: 'Брести прочь', root: 'ending'}
        ]
    },

    ending: {
        text: [
            'Эта встреча оставила горький осадок. Город, который казался безопасным, показал свои истинные цвета...',
            'Я пообещал себе быть осторожнее в следующий раз.'
        ]
    },
    end: {},
};
_allMeetings['ru']['mountain_stranger'] = {
    meta: {name: 'Горная странница', values: {}}, // Счётчик симпатии
    start: {
        callback: (obj) => {obj.result = 'Ничего не произошло.'; return [true, true, true]},
        text: [
            'Перевал встретил меня ледяным ветром. Я уже собирался разбить лагерь, когда заметил фигуру у одинокого костра. Это была молодая девушка в потрёпанном плаще, с посохом, украшенным резными узорами.',
            'Она подняла голову, и в её глазах мелькнул интерес: "Ты идёшь через перевал? В такую погоду? Смело... или безрассудно."'
        ],
        choice: [
            {name: '"А ты что здесь делаешь?"', root: 'question'}, // + симпатия
            {name: 'Молча сесть у костра', root: 'silent'}, // Нейтрально
            {name: '"Это не твоё дело."', root: 'rude'} // - симпатия
        ]
    },
    // Ветвь 1: Вопрос
    question: {
        text: [
            'Девушка улыбнулась: "Ищу травы, которые растут только на высоте. А ещё... наблюдаю за путниками. Некоторые рассказывают удивительные истории."',
            'Она протянула мне кружку с дымящимся чаем: "Поделишься, зачем тебе эти горы?"'
        ],
        choice: [
            {name: 'Соврать что-нибудь', root: 'artifact'}, // +
            {name: '"Просто путешествую"', root: 'travel'}, // Нейтрально
            {name: '"Это секрет!"', root: 'silent'} // -
        ]
    },
    // Ветвь 1.1: Артефакт
    artifact: {
        text: [
            'Её глаза загорелись: "Артефакт? Ты имеешь в виду Хрусталь Ветров? Если да, то ты на верном пути."',
            'Я сказал первое, что пришло в голову. Однако это смогло её впечатлить.',
            'Она достала из сумки какой-то предмет и сказала: "У меня есть, что тебе показать..."'
        ],
        choice: [
            {name: 'Поинтересоваться', root: 'offer'}
        ]
    },
    // Ветвь 1.2: Путешествие
    travel: {
        text: [
            '"Просто так? — она задумалась. — Редко встретишь тех, кто ценит сам путь, а не цель."',
            'Девушка кивнула: "Тогда держи совет: на северном склоне ловушки ставить любят разбойники."'
        ],
        // Нейтральный исход
        choice: [
            {name: 'Поблагодарить', root: 'silent'}
        ]
    },
    // Ветвь 2: Молчание
    silent: {
        text: [
            'Мы сидели в тишине, слушая треск костра. Через некоторое время странница вздохнула: "Ты странный. Но такие мне нравятся."',
            'Она бросила в огонь горсть трав, и пламя вспыхнуло зелёным. Спустя некоторое время она собрала вещи и направилась в путь.'
        ],
        // Нейтральный исход
        choice: [
            {name: 'Уйти', root: 'luck'}
        ]
    },
    // Ветвь 3: Грубость
    rude: {
        callback: (obj) => {spartMrthBadIssue()},
        text: [
            'Девушка нахмурилась: "Понятно. Тогда греться у моего костра тебе не стоит."',
            'Она демонстративно повернулась спиной, доставая из сумки какой-то амулет.',
            'Я ушёл в темноту, оставив костёр позади. Горы встретили меня порывом ледяного ветра...'
        ],
    },
    // Предложение предмета (если симпатия >=2)
    offer: {
        callback: (obj) => {
            obj.values.cost = itemFunc.getHonestCost(40); 
            return mrthInventoryFreeSpace() ? [mapMeta.points >= obj.values.cost, true] : [false, true]},
        text: [
            '"У меня есть кое-что полезное, — сказала она, показывая странных размеров карманный монитор. — Он позволит тебе видеть гораздо больше."',
            '"Ты мне симпатичен, поэтому отдам за немного монет. Обычно беру втрое больше."',
        ],
        extrastring: (obj) => {return `Купить "Второй монитор" за ${obj.values.cost} монет?`},
        // Код: покупка моника (проверка денег)
        choice: [
            {name: 'Купить', root: 'buy'},
            {name: 'Отказаться', root: 'silent'}
        ]
    },
    // Покупка
    buy: {
        callback: (obj) => { 
            obj.result = mrthInventoryComment(mrthInventoryAddItem('monitor'));
            spartMrthGoodIssue()
        },
        text: ['Девушка улыбнулась: "Удачной охоты. И будь осторожен — не всё, что ценно, должно быть найдено."']
    },
    // Пожелание удачи (нейтральный и полож.)
    luck: {
        callback: (obj) => {spartMrthGoodIssue()},
        text: ['Странница помахала рукой: "Пусть дорога будет добра к тебе. Если встретимся ещё, расскажешь, что нашёл."']
    },
    // Финал
    end: {},
};
_allMeetings['ru']['portal_maze'] = {
    meta: { 
        name: 'Лабиринт порталов', 
        values: { portalsPassed: 0 } // Счётчик пройденных порталов
    },
    start: {
        text: [
            'Всё началось с неверного шага. Я споткнулся о камень, упал — и вдруг земля исчезла под ногами. Когда я открыл глаза, вокруг плавали разноцветные врата, ведущие в неизвестность.',
            'Пространство между ними было лишено привычных законов: здесь текли реки из света, а камни падали вверх. Я понял, что выбраться отсюда можно, только пройдя через определённое число порталов...'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed = 0; // Обнуляем счётчик при старте
        },
        choice: [
            { name: 'Шагнуть в ближайший портал', root: 'portal_1' }
        ]
    },
    // Портал 1
    portal_1: {
        text: [
            'Я оказался в лесу, где деревья были кристаллическими. Их листья звенели на ветру, как стеклянные колокольчики.',
            'В воздухе витал сладкий запах, от которого кружилась голова. Три портала светились среди стволов: **алый**, **изумрудный** и **золотой**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Алый портал', root: 'portal_2' },
            { name: 'Изумрудный портал', root: 'portal_3' },
            { name: 'Золотой портал', root: 'portal_4' }
        ]
    },
    // Портал 2
    portal_2: {
        text: [
            'Алый свет поглотил меня. Я стоял на плавающем острове над бездной. Внизу клубились тучи, а вокруг летали гигантские крылатые рыбы.',
            'Порталы здесь парили в воздухе: **фиолетовый**, **бирюзовый** и **чёрный**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Фиолетовый портал', root: 'portal_5' },
            { name: 'Бирюзовый портал', root: 'portal_6' },
            { name: 'Чёрный портал', root: 'portal_7' }
        ]
    },
    // Портал 3
    portal_3: {
        text: [
            'Изумрудный свет привёл меня в пещеру, где стены были покрыты живыми мхами. Они шептались на непонятном языке, а вдали журчал подземный источник.',
            'У воды мерцали три выхода: **серебряный**, **бирюзовый** и **изумрудный**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Серебрянный портал', root: 'portal_1' },
            { name: 'Бирюзовый портал', root: 'portal_6' },
            { name: 'Изумрудный портал', root: 'portal_3' },
        ]
    },
    // Портал 4
    portal_4: {
        text: [
            'Золотой портал перенёс меня в пустыню, где песок был чёрным, а небо — зелёным. Два солнца висели над горизонтом, отбрасывая двойные тени.',
            'На дюне стояли порталы: **фиолетовый**, **серебрянный** и **чёрный**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Фиолетовый портал', root: 'portal_5' },
            { name: 'Серебрянный портал', root: 'portal_1' },
            { name: 'Чёрный портал', root: 'portal_7' }
        ]
    },
    // Портал 5
    portal_5: {
        text: [
            'Фиолетовый портал привёл меня в библиотеку с книгами, написанными невидимыми чернилами. Они проявлялись, стоило мне подумать о вопросе.',
            'Между стеллажами светились три портала: **алый**, **золотой** и **бирюзовый**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Алый портал', root: 'portal_2' },
            { name: 'Золотой портал', root: 'portal_4' },
            { name: 'Бирюзовый портал', root: 'portal_6' },
        ]
    },
    // Портал 6
    portal_6: {
        text: [
            'Бирюзовый свет окутал меня, и я очутился в городе, где здания были сделаны изо льда. Жители-тени скользили по улицам, не замечая меня.',
            'На центральной площади стояли порталы: **изумрудный**, **фиолетовый** и **серебрянный**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Изумрудный портал', root: 'portal_3' },
            { name: 'Фиолетовый портал', root: 'portal_5' },
            { name: 'Серебрянный портал', root: 'portal_1' },
        ]
    },
    // Портал 7
    portal_7: {
        text: [
            'Чёрный портал поглотил меня целиком. Я оказался в полной темноте, где единственным светом были мои собственные мысли, материализующиеся в виде светлячков.',
            'Внезапно вдали возникли три точки: **бирюзовая**, **серебрянная** и **изумрудная**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1;
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Бирюзовый портал', root: 'portal_6' },
            { name: 'Серебрянный портал', root: 'portal_1' },
            { name: 'Изумрудный портал', root: 'portal_3' },
        ]
    },
    // Финал (после 12 порталов)
    final: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('poop')); spartMrthBadIssue()},
        text: [
            'После двенадцатого перехода мир вокруг затрещал, как стекло. Цвета смешались, и я упал на колени, закрывая лицо руками.',
            'Когда я осмелился взглянуть, увидел знакомый пейзаж — тот самый камень, о который споткнулся. Портал позади закрылся с тихим вздохом.',
            'Я был свободен. От такого кол-ва порталов меня уже начало тошнить...'
        ],
        choice: [
            { name: 'Идти дальше', root: 'end' }
        ]
    },
    end: {}
};
//
//
//
_allMeetings['en'] = {};
//
_allMeetings['en']['hole'] = {
    meta: {name: 'Hole', values: {}},
    start: {text: ['After wandering through this sector for some time, a magnificent view of its inner world opened up to me. It would seem I should have reached its center long ago, but I still can\'t get there.',
            'I should have noticed this earlier—when I turned around, everything behind me suddenly became strangely larger. And that endless forest I\'m in now seemed like just three pine trees a minute ago.',
            'Wow, this sector contains an entire separate world, possibly as vast as the external one. I was pondering this when I stumbled upon a wanderer. He didn\'t seem dangerous—most likely just another researcher like me.',
            'He approached me. Only now did I notice how very old he was. He extended his hand, offering me some object, clearly wanting to give it to me...'
        ],choice: [
            {name: 'Take', root: 'pick'},{name: 'Do nothing', root: 'not'},
        ]}, pick: {text: ['The moment I tried to take the object he was offering, he immediately pulled his hand back under his cloak. Then he gave me a displeased look, turned around, and started walking away...',
            'But suddenly, he spoke. He talked about how greed had defeated him when he visited this sector. There\'s no way out for him now, as every step forward equals a thousand steps back.',
            'A chill ran down my spine. Even though I\'d only walked for three minutes, it would take me two full days to return. The old man added that he had been trying to reach the center for about half a year, driven by the desire for treasure. How we even met is unclear.',
            'Then he finally left, heading back toward the center. I had no choice but to turn around and begin the very long journey back out of the sector. I\'d lose a lot of energy and time on this...',
        ],choice: [
            {name: 'Begin the journey', root: 'bads'},
        ]},not: {text: ['The silent standoff lasted about half a minute before the old man smiled and broke the silence.',
            'He told me how he ended up here—how he spent half a year trying to reach the center, unaware that each step inward equaled a thousand steps back. This information was extremely unpleasant for me. I turned away from him, staring at the outer world, when he called out to me...',
            'This time, he took my hand himself and gave me two items: a very old, worn paper envelope and a few radar charges. He added that the envelope could return me back, but only if it was given freely—if taken by force, it wouldn’t work.',
            'I suddenly praised myself for initially choosing inaction. My mind raced—was there a flaw in this rule? Could I somehow bring the old man back? I tried to find information in the envelope, quickly scanning all the text I could decipher.',
            'The air around me shifted. I lifted my head from the envelope—the vast outer world and the old man were gone. The envelope crumbled in my hands, and I found myself right next to the sector. Slowly regaining my bearings, I moved on...',
        ],choice: [
            {name: 'Check the radars', root: 'item'},
        ]},item: {
            callback: (obj) => {if(mrthInventoryFreeSpace()) {obj.root = 'get'; return 'root'} else {obj.root = 'money'; return 'root'}
        }},get: {
            callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('radar')); spartMrthGoodIssue()},
            text: ['The radars, though old, are still quite functional. I think I\'ll keep them—they might come in handy.', '...']
    },money: {
        callback: (obj) => {var points = itemFunc.getHonestCost(40); mapMeta.points += points; obj.result = `You received ${points} coins.`; spartMrthGoodIssue(true)},
        text: ['The radars were too old, and I didn\'t have space to keep them. So I decided to sell them to the first scrap dealer I met for some coins.', '...']
    },bads: {
        callback: (obj) => {mapMeta.points = Math.round(mapMeta.points*0.8); obj.result = `You lost 20% of your coins.`; spartMrthBadIssue()},
    },end: {}
};
//
_allMeetings['en']['tower'] = {
    meta: {name: 'Windmill', values: {used: false}},
    start: {text: ['In this sector, I was lucky to find a tall windmill, albeit abandoned. It stood on a small hill, surrounded by completely overgrown wheat fields.',
            'Approaching it, I began circling it from all sides, trying to find a way inside—a small crack or a weak wooden panel. After two full circles, I made a discovery: every time I looked away and back at the windmill, all its rotten planks, logs, foundation stones, and pillars somehow rearranged themselves.',
            'After two more circles, I "generated" myself an entrance, so to speak. Before entering, I hesitated—inside, I wouldn\'t be able to see the entire windmill at once. What if I couldn\'t leave and became trapped? This thought frightened me, so I stood right at the entrance and looked up at the tower\'s peak, thinking it over one last time...',
        ],choice: [
            {name: 'Enter', root: 'enter'},{name: 'Do nothing', root: 'not'},
        ]}, enter: {
        callback: () => {return [mrthGetItem('radar') !== false, true]},
        text: ['I decided to take the risk and enter the tower. Inside, it remained static—it retained the appearance I last saw from the outside. Apparently, it only changes its structure for me when I\'m outside. That\'s a relief; now I just need to find a way up.',
            'After all, a bird\'s-eye view of the area would be very useful right now. As I climbed higher, I noticed the windmill hadn\'t stopped changing—or rather, it endlessly extended upward. Looking down, I realized that after all my attempts to ascend the fragile structure, I\'d barely risen half a meter.',
            'Yet the sensation of height told me I was actually quite high up. I stood near a small door, through whose cracks wind howled as if at flight altitude. I wanted to step out and confirm my height, but the door was locked. After some fiddling, I managed to lift the latch and step outside.',
        ],choice: [
            {name: 'Use 1 radar', root: 'radar'},{name: 'Just look around', root: 'view'},
        ]},radar: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('radar')); obj.values.used = 'radar'},
        text: ['Using my pocket radar, I quickly mapped everything visible from this height down to the smallest details. After one last look, I descended the windmill and left. As I walked away, I marked four interesting locations on my map to visit as soon as possible.', '...'],
    },view: {
        callback: (obj) => {obj.values.used = 'view'},
        text: ['I didn\'t have any radar charges with me, which would\'ve helped document more. After surveying the area, I descended the windmill and left. I marked a couple of interesting spots on my map to visit soon.', '...'],
    },not: {text: ['I\'ll pass on the pleasure of losing my mind in an enclosed, ever-shifting space today. After circling the tower again and observing it, I found no more oddities—just a lost tablet with twenty-five silver coins.',
            'There\'s nothing more to find here, so I left the windmill behind to continue my research.', '...'
        ],},end: {
        callback: (obj) => {
            if(obj.values.used !== false) {
                if(obj.values.used == 'radar') {setTimeout(() => {mapGenerateSpoilers(4); obj.result = 'You discovered 4 useful sectors.'; spartMrthGoodIssue()}, 1500)}
                else {setTimeout(() => {mapGenerateSpoilers(2); obj.result = 'You discovered 2 useful sectors.'; spartMrthGoodIssue()}, 1500)}
            } else {var points = itemFunc.getHonestCost(30); mapMeta.points += points; obj.result = `You received ${points} coins.`; spartMrthGoodIssue(true)}
        }}
};
//
_allMeetings['en']['shop'] = {
    meta: {name: 'Market', values: {}},
    start: {
        callback: (obj) => {obj.values.cost = itemFunc.getHonestCost(50); return [mrthInventoryFreeSpace(), mrthInventoryHaveItems(), true]},
        text: ['I was lucky to find a small market in this sector. If needed, I can sell or buy something useful for my research here.',
            'Unfortunately, I have very little time. I won\'t have time to trade properly, and I\'ll be very lucky if I manage to make even one deal.',
            'What do I need more right now?',
        ],choice: [
            {name: 'Buy', root: 'buy'},{name: 'Sell', root: 'sell'},{name: 'Leave', root: 'leave'},
        ]},leave: {
        callback: (obj) => {obj.result = 'You simply walked away.'; spartMrthBadIssue()},
        text: ['I don\'t have time for trading, nor any extra items. I thought to myself and walked away from the sector.', '...']
    },buy: {
        callback: (obj) => {return [mapMeta.points >= obj.values.cost, mapMeta.points >= obj.values.cost, true]},
        text: ['Running past all the traders, I noticed a stall called "Artifacts" with useful items for special sectors. I think it would be nice to buy something...'],
        extrastring: (obj) => {return `Each item costs: ${obj.values.cost} coins.`},
        choice: [
            {name: 'Cool glasses', root: 'glasses'},{name: 'Chocolate bar', root: 'cake'},{name: 'Buy nothing', root: 'leave'},
        ]},glasses: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('glasses')); mapMeta.points -= obj.values.cost; spartMrthGoodIssue()},
        text: ['After paying for the glasses, I rushed to continue my research, feeling happier after a successful purchase.', '...'],
    },cake: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('chocolate')); mapMeta.points -= obj.values.cost; spartMrthGoodIssue()},
        text: ['After paying for the "Chocolate bar", I rushed to continue my research, feeling happier after a successful purchase.', '...'],
    },sell: {
        callback: () => {return [mrthGetItem('marathon_key') !== false, mrthGetItem('universal_key') !== false, true]},
        text: ['Running past all the traders, I noticed a stall called "Key Buying". Here I could sell an extra key lying around. They pay a few coins for each key—I think it\'s worth it...'],
        extrastring: (obj) => {return `You will receive ${obj.values.cost} coins for selling any item.`},
        choice: [
            {name: 'Marathon key', root: 'marathon_key'},{name: 'Universal key', root: 'universal_key'},{name: 'Sell nothing', root: 'leave'},
        ]},marathon_key: {
        callback: (obj) => {obj.result = 'You sold "Marathon key".'; mrthDeleteItem('marathon_key'); mapMeta.points += obj.values.cost; spartMrthGoodIssue(true)},
        text: ['After receiving my money for the key, I rushed to continue my research, feeling happier after a successful sale.', '...']
    },universal_key: {
        callback: (obj) => {obj.result = 'You sold "Universal key".'; mrthDeleteItem('universal_key'); mapMeta.points += obj.values.cost; spartMrthGoodIssue(true)},
        text: ['After receiving my money for the key, I rushed to continue my research, feeling happier after a successful sale.', '...']
    },
    end: {},
};
//
_allMeetings['en']['tyan'] = {
    meta: {name: 'Dangerous Girl', values: {}},
    start: {text: ['This sector gave me absolutely nothing, despite spending so much time here. As I left, I kept looking back because my search for anything was interrupted by someone else\'s conflict, and to avoid getting involved, I had to slip away quietly.',
            'I\'m already far enough away that nothing bad should happen. But the feeling of being watched won\'t go away. Every now and then, I hear rustling to my right or someone leaping from rooftop to rooftop above me. Yes, I\'m leaving this abandoned city—unfortunately, already completely looted.',
            'I hear footsteps again, quiet ones behind me. It feels like they\'re gradually getting closer. I\'ve always turned around at the slightest sound before, but now I\'m afraid to because I\'m absolutely sure this isn\'t my imagination.',
        ],choice: [
            {name: 'Run away [30%]', root: 'r_run'},{name: 'Turn around', root: 'check'},
        ]},check: {
        callback: () => {return [true, mrthGetItem('bribery') !== false]},
        text: ['As I began to turn around, the footsteps quickened—a dark silhouette rushed at me. It knocked me down, sat on me, and threatened to punch me in the face. Definitely not a researcher—probably a bandit. And if it\'s a bandit, I likely won\'t be left alive.'
        ],choice: [
            {name: 'Try to hit [40%]', root: 'r_hit'}, {name: 'Bribe', root: 'bribery'},
        ]},saved: {
        callback: (obj) => {obj.result = 'You escaped.'; spartMrthGoodIssue()},
        text: ['The right decision made at the right time helped me avoid bad consequences. I managed to escape the madwoman and leave the sector safely. I should rest a bit before continuing my research...', '...'
        ]},run_bad: {
        callback: () => {return [true, mrthGetItem('bribery') !== false]},
        text: ['As soon as I quickened my pace, the stranger behind me did too. And how—we hadn\'t even run for ten seconds before I heard a lunge and felt a blow from behind. During the lunge, she shouted—yes, it was a she, judging by the voice.',
            'I fell onto my side, the attacker rolled me onto my back, sat on me, and began threatening to punch me in the face. Definitely not a researcher—probably a bandit. And if it\'s a bandit, I likely won\'t be left alive.'
        ],choice: [
            {name: 'Do nothing', root: 'not'},{name: 'Bribe', root: 'bribery'},
        ]},not: {callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('black')); spartMrthBadIssue()},
        text: ['After some inaction, the bandit realized I wasn\'t a threat. She rummaged through my bag, put something in it, then—now threatening me with a knife—got off me and disappeared into the night. I didn\'t want to hit her first; I was unsettled that she was a girl.',
            'Checking my bag, I found to my great disappointment that she had slipped me a black mark. This definitely doesn\'t bode well—I thought as I began leaving the sector more urgently.', '...'
        ]},bribery: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('bribery')); obj.result = 'You bribed your way out.'; spartMrthGoodIssue()},
        text: ['With a precise and slow hand movement, I pulled out my emergency stash—a wad of cash. All bandits are greedy for money, and maybe I can buy my way out. The bandit then removed her hood, and to my great surprise, I saw that my attacker was a girl.',
            'She snorted at me, took the money from my hands, and hid it in her cloak. Then she helped me up and, after carefully looking around, left. I had become part of an extremely strange scene that, fortunately for me, ended quite well. I left the sector and continued my research...', '...'
        ]},hit_bad: {
            callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('black')); spartMrthBadIssue()},
            text: ['I tried to elbow the bandit in the head, but in vain—I barely grazed her forehead, knocking off her hood. Suddenly, it wasn\'t a threatening bandit on top of me, but a girl winding up to hit me.',
            'When I came to, I was alone. After the blow, I felt her rummaging through my bag. Checking it, I found to my great disappointment that she had slipped me a black mark. This definitely doesn\'t bode well—I thought as I began leaving the sector more urgently.', '...'
        ]},
    r_hit: {callback: (obj) => {obj.root = Math.random() <= 0.4 ? 'saved' : 'hit_bad'; return 'root'}},
    r_run: {callback: (obj) => {obj.root = Math.random() <= 0.3 ? 'saved' : 'run_bad'; return 'root'}},
    end: {},
};
_allMeetings['en']['labyr'] = {
    meta: {name: 'Labyrinth', values: {}},
    start: {text: ['In this sector, I was "lucky" enough to get lost in a labyrinth. A stone maze with extremely high walls, no hints anywhere, and no way back. Climbing the walls is impossible too - they\'re smooth as ice, and it recently rained.',
            'Persistent thoughts that I might be stuck here not just for a long time, but perhaps forever, kept creeping into my mind. The last thing I need now is to panic. I stood up to catch my breath and calm down. I reached what seemed like a familiar fork. Which way should I go...',
        ],choice: [{name: 'Go left [35%]', root: 'check'}, {name: 'Go right [35%]', root: 'check'}]
    },var1: {
        text: ['I\'ll go this way this time. The walls oppress me unbearably with their massiveness - their height makes the passages feel unnaturally narrow, to the point where thinking about it makes it harder to breathe. Another fork. Which way now?'
        ],choice: [{name: 'Go left [35%]', root: 'check'}, {name: 'Go right [35%]', root: 'check'}]
    },var2: {
        text: ['I\'ll turn here. Every step I take on the wet concrete echoes endlessly through the entire labyrinth. Sometimes I just stop and listen, hoping to hear something beyond my own noises.',
            'But all the sounds I\'ve made earlier have transformed into distant echoes, becoming an indistinct hum where it\'s hard to discern anything.'
        ],choice: [{name: 'Go left [35%]', root: 'check'}, {name: 'Go right [35%]', root: 'check'}]
    },var3: {
        text: ['This will never end - I thought at yet another fork, continuing my wandering. I kept trying to devise ways to mark my path - maybe unravel a long rope, make scratches on walls, or leave items at junctions...',
            'But these ideas will likely remain just thoughts - I probably won\'t use any of these methods after all.'
        ],choice: [{name: 'Go left [35%]', root: 'check'}, {name: 'Go right [35%]', root: 'check'}]
    },var4: {
        text: ['This way now. I\'ve heard somewhere that to systematically explore a labyrinth, you should make three left turns and one right. Or was it two turns? Clearly I entered this maze with woefully inadequate knowledge about labyrinths...'
        ],choice: [{name: 'Go left [35%]', root: 'check'}, {name: 'Go right [35%]', root: 'check'}]
    },check: {
        callback: (obj) => {if(Math.random() <= 0.35) {obj.root = 'exit'} else {obj.root = `var${Math.floor(1+Math.random() * 3.999)}`}; mapMeta.points -= Math.floor(mapMeta.points * 0.08); return 'root'}
    },exit: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('tax')); spartMrthBadIssue()},
        text: ['Beyond another fork appeared salvation - gates in the wall, with dawn light streaming through. I entered the labyrinth around noon. Good heavens, nearly a full day has passed, most of which I spent wandering nonstop. I lack the energy to rejoice at my escape - I need rest before returning to work.', '...']
    },end: {}
};
//
_allMeetings['en']['ded'] = {
    meta: {name: 'Old Man', values: {}},
    start: {callback: (obj) => {obj.values.cost = itemFunc.getHonestCost(40); return [mapMeta.points >= obj.values.cost, mrthInventoryHaveItems(), true]},
        text: ['A forest path in rural countryside between sectors, a chilly snowy area equally distant from all civilization. A picturesque place, with occasional particularly fascinating houses adorned with intricate wood carvings.',
            'At a crossroads illuminated by what seemed like the settlement\'s only streetlight stood an old man playing a small accordion. Bundled head-to-toe in warm clothing, a small pile of snow had accumulated on his head. He played while staring down at his hat lying empty in the snow before him.',
            'Passing by, I noticed nothing but snow in his hat. Hardly surprising in such an unpopulated area for busking. Yet I felt pity and suddenly wanted to brighten his day somehow, to give him something...'
        ], extrastring: (obj) => {return `You can give ${obj.values.cost} coins or a random item.`},
        choice: [
            {name: 'Coins', root: 'money'},{name: 'Random item', root: 'item'},{name: 'Nothing', root: 'not'},
        ]},not: {callback: (obj) => {obj.result = `You did nothing.`; spartMrthBadIssue()},
            text: ['I pretended to search my pockets vigorously as I passed, but alas, found nothing suitable. He glanced up briefly - my gesture caught his attention. His kind eyes filled with hope that maybe I could give him something. But alas, it wasn\'t meant to be.',
            'Walking away, I felt like a bad person despite doing nothing wrong. Perhaps that was precisely the problem - I did nothing...', '...'
        ]},money: {callback: (obj) => {mapMeta.points -= obj.values.cost; obj.root = 'donat'; return 'root'}},
    item: {callback: (obj) => {mrthDeleteRandomItem(); obj.root = 'donat'; return 'root'}},
    donat: {callback: (obj) => {
            spartMrthGoodIssue();
            if(mapMeta.effects[1] !== false) {obj.result = `You got rid of "${mrthStuff.items[mapMeta.effects[1].tag].name}".`; mrthDeleteItem(mapMeta.effects[1].tag); return};
            if(mapMeta.effects[2] !== false) {obj.result = `You got rid of "${mrthStuff.items[mapMeta.effects[2].tag].name}".`; mrthDeleteItem(mapMeta.effects[2].tag); return};
            obj.result = 'You did something good.';
        },text: ['I picked up his hat, brushed off the snow, and handed it back along with my donation. He said nothing, just gave me a look of pure joy that instantly made me forget what I\'d given. It was worth it - the old man headed home to warm up, while I continued my journey happier after a good deed.',
            'He didn\'t look like any priest, yet after this brief encounter I felt as if relieved of a heavy spiritual burden.', '...'
        ]},end: {}
};
_allMeetings['en']['abandoned'] = {
    meta: {name: 'Abandoned Building', values: {}},
    start: {
        text: [
            'In the middle of a dense forest, I came across a half-collapsed building overgrown with ivy. Its walls were cracked and the windows long devoid of glass. The wind rustled fragments of old wallpaper, creating an illusion that the building was breathing.',
            'A rusted sign lay near the entrance with a barely legible warning: "Danger. Do not enter." Yet a faint flickering light came from inside, as if something - or someone - was there.',
            'I felt a chill run down my spine. This place clearly held some secret...'
        ],
        choice: [
            {name: 'Enter the building', root: 'enter'},
        ]
    },
    enter: {
        text: [
            'Stepping inside, I found myself in a spacious hall with high ceilings. The floor had collapsed in several places, revealing dark basements below. The flickering light came from a strange crystal lying at the room\'s center.',
            'The crystal pulsed with a soft blue glow, almost beckoning to be taken. But scattered bones and torn clothing around it served as a clear warning.',
            'The air grew thicker around me, and the shadows on the walls began to move...'
        ],
        choice: [
            {name: 'Take the crystal', root: 'take'},
            {name: 'Leave while you still can', root: 'escape'}
        ]
    },
    take: {
        text: [
            'The moment I touched the crystal, the light died and the building shook violently. Walls began crumbling as a deep growl emerged from the darkness. I rushed for the exit, but the door had vanished, replaced by a brick wall.',
            'The crystal turned icy in my hand, its cold spreading through my body. I could feel my strength draining away...'
        ],
        choice: [
            {name: 'Try to smash the crystal', root: 'break'},
            {name: 'Hold on as long as possible', root: 'hold'}
        ]
    },
    break: {
        text: [
            'Gathering my last strength, I smashed the crystal against the floor. It cracked, releasing a blinding flash of light. The darkness receded and the building fell still.',
            'The shards crumbled to dust, but I felt some of its energy remain within me. It provided warmth, yet also caused slight dizziness...'
        ],
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('order')); spartMrthBadIssue(); return [true]},
        choice: [
            {name: 'Leave the building', root: 'end'}
        ]
    },
    hold: {
        text: [
            'I clenched the crystal tightly, resisting its cold. Suddenly its light flared brightly, forcing the shadows back. The shaking stopped and the door reappeared.',
            'The crystal dissolved in my palm, leaving only warmth behind. I felt a surge of energy, as if I had absorbed part of its power...'
        ],
        callback: (obj) => {
            if(mrthInventoryFreeSpace()) {
                obj.result = mrthInventoryComment(mrthInventoryAddItem('joker'))
                spartMrthGoodIssue()
            } else {
                var c = itemFunc.getHonestCost(60);
                mapMeta.points += c;
                spartMrthGoodIssue(true);
                obj.result = `You received ${c} coins.`
            }
            return [true]},
        choice: [
            {name: 'Leave the building', root: 'end'}
        ]
    },
    escape: {
        text: [
            'I turned and ran for the exit. The door slammed shut behind me as the building emitted a loud moan.',
            'Looking back, I saw the lights go out as the structure seemed to shrink, becoming even more ominous. I was glad to have left in time...'
        ],
        callback: (obj) => {
            var c = itemFunc.getHonestCost(30);
            mapMeta.points += c;
            spartMrthGoodIssue(true);
            obj.result = `You received ${c} coins.`
            return [true]},
        choice: [
            {name: 'Walk away', root: 'end'}
        ]
    },
    end: {}
};
_allMeetings['en']['wasteland'] = {
    meta: {name: 'Wasteland', values: {}},
    start: {
        text: [
            'I found myself in an endless wasteland where the wind drove clouds of dust across the ground. The sun scorched mercilessly, with only sparse dry bushes and fragments of ancient structures around.',
            'A barely visible path led deeper into the wilderness ahead. To the right stood a half-collapsed stone arch, while to the left was a small hill that might offer a view of the surroundings.'
        ],
        choice: [
            {name: 'Follow the path', root: 'path'},
            {name: 'Examine the arch', root: 'arch'},
            {name: 'Climb the hill', root: 'hill'}
        ],
        callback: (obj) => {
            // generate effects
            obj.values.buff = getPermanentEffect(true);
            obj.values.debuff = getPermanentEffect(false, false, 0.75);
            obj.values.extra = `The drink will change multipliers. ${commentPermanentEffect(obj.values.buff)}, while also ${commentPermanentEffect(obj.values.debuff)}`;
            obj.result = 'You refused the potion.'
        },
    },
    path: {
        text: [
            'The path turned out longer than I expected. With each step, the landscape grew more monotonous, and a strange, almost metallic smell hung in the air.',
            'Suddenly I noticed a silhouette in the distance. It was a peculiar stone covered in cracks that emitted a faint violet glow. It clearly didn\'t belong to this world...'
        ],
        choice: [
            {name: 'Approach the stone', root: 'stone'},
            {name: 'Go around it', root: 'avoid'}
        ]
    },
    arch: {
        text: [
            'Approaching the arch, I discovered ancient symbols covering its surface that glowed faintly in response to my presence.',
            'Behind the arch lay a small object - a tattered scroll with a seal that crumbled to dust the moment I reached for it...'
        ],
        choice: [
            {name: 'Unroll the scroll', root: 'scroll'},
            {name: 'Leave it', root: 'leave_it'}
        ]
    },
    hill: {
        text: [
            'From the hilltop, I could see across the wasteland. At its center stood a solitary tree with black leaves, though there were no other signs of life anywhere around.',
            'The tree cast a long shadow that seemed to move independently of the wind...'
        ],
        choice: [
            {name: 'Approach the tree', root: 'tree'},
            {name: 'Go back down', root: 'go_back'}
        ]
    },
    stone: {
        text: [
            'When I touched the stone, I felt its energy surge through my arm. The cracks flared brighter, and visions of distant worlds flashed before my eyes...',
            'When the visions faded, the stone had disappeared, leaving only a small patch of scorched earth behind.'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    avoid: {
        text: [
            'I decided not to risk it and went around the stone. However, after just a few steps, I heard a faint chime, like someone running a finger along a crystal glass rim.',
            'The sound came from where the stone had been, but when I looked back, there was only emptiness...'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    scroll: {
        text: [
            'The scroll turned out to be a map - but not of this land. It showed stars and planets arranged in a strange configuration. At the bottom was an inscription: "Where shadows converge".',
            'Just as I tried to understand its meaning, the ink began sliding off the parchment, leaving behind a blank page...'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    leave_it: {
        text: [
            'I left the scroll where it was. As I walked away, its seal restored itself before disappearing in a flash of blue flame.',
            'Not a trace remained, only a faint smell of smoke lingering in the air...'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    tree: {
        text: [
            'Approaching the tree, I saw its trunk was covered in scars like carved inscriptions. The leaves whispered in an unknown tongue, and the tree\'s shadow stretched toward me as if trying to touch me.',
            'I felt something pulling me downward toward the roots... but suddenly the whispering stopped, and the tree went still.'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    go_back: {
        text: [
            'I descended the hill without approaching the tree. Yet even from a distance, I felt its gaze - as if it watched me until I was out of sight.',
            'The wasteland fell silent again, broken only by the sound of sand shifting underfoot...'
        ],
        choice: [
            {name: 'Continue journey', root: 'final'}
        ]
    },
    final: {
        text: [
            'After long wandering, I came upon a lone tent standing in the wasteland. At its entrance sat an old man in dark robes. His eyes glowed with an unnatural yellow light.',
            'He raised his head and smiled: "You\'ve come just in time. I can offer you something... special."',
            'A small vessel containing a smoking liquid appeared in his hand. "This drink will reveal what is hidden. But beware - not all truths bring joy."'
        ],
        extrastring: (obj) => {return obj.values.extra},
        choice: [
            {name: 'Drink the potion', root: 'drink'},
            {name: 'Refuse', root: 'end'}
        ]
    },
    drink: {
        callback: (obj) => {
            spartMrthGoodIssue();
            applyPermanentEffect(obj.values.buff);
            applyPermanentEffect(obj.values.debuff);
            obj.result = 'You drank the potion.';
            obj.root = 'end'; return 'root'
        }
    },
    end: {callback: (obj) => {spartMrthBadIssue()}}
};
_allMeetings['en']['city_danger'] = {
    meta: {name: 'City Trap', values: {}},
    start: {
        text: [
            'The city alleyways, usually noisy and full of life, were suspiciously empty today. Wind scattered scraps of paper across the cobblestones, and unseen eyes watched me from dark doorways.',
            'Suddenly two figures blocked my path: one stocky with a knife at his belt, the other lean with a predatory grin. "Well, traveler," the thin one hissed, "decided to take a stroll through our streets?"'
        ],
        choice: [
            {name: 'Try to negotiate', root: 'negotiate'},
            {name: 'Run away', root: 'escape'}
        ]
    },

    // Main path 1: Negotiation
    negotiate: {
        callback: (obj) => {return [mrthGetItem('bribery') !== false, true]},
        text: [
            'I raised my hands to show I meant no trouble. "Just passing through," I said. "Maybe we can settle this peacefully?"',
            'The stocky thug laughed: "Peacefully? Fine. Two options: either hand over everything you\'ve got, or... we\'ll take it ourselves - with interest."',
            '*requires "Cash Stash" to bribe'
        ],
        choice: [
            {name: 'Pay them off', root: 'pay'},
            {name: 'Refuse', root: 'fight'}
        ]
    },

    // Main path 2: Escape attempt
    escape: {
        text: [
            'I spun around and bolted down a narrow alley. Shouts echoed behind me: "Get him!"',
            'My heart pounded as my feet slipped on wet stone. Ahead - a fork: left leads to a dead-end with a high wall, right to a noisy street where their allies might be...'
        ],
        choice: [
            {name: 'Jump the wall', root: 'wall'},
            {name: 'Head for the street', root: 'street'}
        ]
    },

    // Branch 1.1: Bribe
    pay: {
        callback: (obj) => {mrthReduceItem(mrthGetItem('bribery')); obj.result = 'You paid them off.'; spartMrthGoodIssue(); return [true]},
        text: [
            'I pulled out my emergency cash and tossed it to the thugs. The thin one caught it deftly, weighed it in his hand and smirked: "A bit light... But alright, we\'re feeling generous today."',
            'They stepped aside to let me pass. As I walked away, the stocky one kicked me in the back: "Bring more next time, big spender!"'
        ],
        choice: [
            {name: 'Leave, gritting teeth', root: 'ending'}
        ]
    },

    // Branch 1.2: Fight
    fight: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('salad')); spartMrthBadIssue(); return [true]},
        text: [
            '"You\'ve made a mistake," I said and punched the thin one in the jaw. He went down, but the stocky thug immediately struck my ribs.',
            'Pain shot through my body, but I managed to take him down too. Both thugs lay unconscious as I limped away, clutching my side...'
        ],
        choice: [
            {name: 'Crawl to a healer', root: 'ending'}
        ]
    },

    // Branch 2.1: Wall jump
    wall: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('tax')); spartMrthBadIssue(); return [true]},
        text: [
            'I jumped, caught the wall\'s edge and rolled over. But the landing went wrong - I heard a crack and felt sharp pain in my leg.',
            'The thugs didn\'t follow. "You\'ll die here anyway, cripple!" someone shouted from above.'
        ],
        choice: [
            {name: 'Crawl toward the lights', root: 'ending'}
        ]
    },

    // Branch 2.2: Street with allies
    street: {
        callback: (obj) => {
            mapMeta.points -= Math.round(mapMeta.points * 0.33);
             spartMrthBadIssue();
            obj.result = `They took 33% of your coins.`;
            return [true]
        },
        text: [
            'I burst onto the street only to find three more waiting. "Well," one grinned, "we\'ve got company!"',
            'They pinned me down, searched me and took a third of my coins. "Thanks for the donation," the leader said. "Now scram while you still can."'
        ],
        choice: [
            {name: 'Stagger away', root: 'ending'}
        ]
    },

    ending: {
        text: [
            'This encounter left a bitter aftertaste. The city that seemed safe had shown its true colors...',
            'I promised myself to be more careful next time.'
        ]
    },
    end: {},
};
_allMeetings['en']['mountain_stranger'] = {
    meta: {name: 'Mountain Wanderer', values: {}}, // Favor counter
    start: {
        callback: (obj) => {obj.result = 'Nothing happened.'; return [true, true, true]},
        text: [
            'The mountain pass greeted me with icy winds. I was about to set up camp when I noticed a figure by a lonely fire. It was a young woman in a tattered cloak, with a staff adorned with carved patterns.',
            'She looked up, interest flashing in her eyes: "You\'re crossing the pass? In this weather? Brave... or reckless."'
        ],
        choice: [
            {name: '"And what are you doing here?"', root: 'question'}, // + favor
            {name: 'Sit silently by the fire', root: 'silent'}, // Neutral
            {name: '"None of your business."', root: 'rude'} // - favor
        ]
    },
    // Branch 1: Question
    question: {
        text: [
            'The girl smiled: "I gather herbs that only grow at this altitude. And... I observe travelers. Some tell fascinating stories."',
            'She handed me a steaming cup of tea: "Care to share why you\'re crossing these mountains?"'
        ],
        choice: [
            {name: 'Make up a story about an artifact', root: 'artifact'}, // +
            {name: '"Just traveling"', root: 'travel'}, // Neutral
            {name: '"It\'s a secret!"', root: 'silent'} // -
        ]
    },
    // Branch 1.1: Artifact
    artifact: {
        text: [
            'Her eyes lit up: "An artifact? You mean the Crystal of Winds? If so, you\'re on the right path."',
            'I said the first thing that came to mind. Yet it managed to impress her.',
            'She pulled something from her bag: "I have something to show you..."'
        ],
        choice: [
            {name: 'Show interest', root: 'offer'}
        ]
    },
    // Branch 1.2: Travel
    travel: {
        text: [
            '"Just because? - she pondered. - Rare to meet those who value the journey itself, not the destination."',
            'The girl nodded: "Then take this advice: bandits love setting traps on the northern slope."'
        ],
        // Neutral outcome
        choice: [
            {name: 'Thank her', root: 'silent'}
        ]
    },
    // Branch 2: Silence
    silent: {
        text: [
            'We sat in silence, listening to the crackling fire. After a while, the wanderer sighed: "You\'re strange. But I like that."',
            'She threw a handful of herbs into the fire, making it flare green. Soon after, she gathered her things and set off.'
        ],
        // Neutral outcome
        choice: [
            {name: 'Leave', root: 'luck'}
        ]
    },
    // Branch 3: Rudeness
    rude: {
        callback: (obj) => {spartMrthBadIssue()},
        text: [
            'The girl frowned: "I see. Then you shouldn\'t warm yourself by my fire."',
            'She turned her back demonstratively, pulling some amulet from her bag.',
            'I walked into the darkness, leaving the fire behind. The mountains greeted me with another gust of icy wind...'
        ],
    },
    // Item offer (if favor >=2)
    offer: {
        callback: (obj) => {
            obj.values.cost = itemFunc.getHonestCost(40); 
            return mrthInventoryFreeSpace() ? [mapMeta.points >= obj.values.cost, true] : [false, true]},
        text: [
            '"I have something useful," she said, showing a strangely-sized pocket monitor. "It\'ll let you see much more."',
            '"I like you, so I\'ll sell it cheap. Normally charge triple."',
        ],
        extrastring: (obj) => {return `Buy "Second Monitor" for ${obj.values.cost} coins?`},
        // Code: monitor purchase (money check)
        choice: [
            {name: 'Buy', root: 'buy'},
            {name: 'Refuse', root: 'silent'}
        ]
    },
    // Purchase
    buy: {
        callback: (obj) => { 
            obj.result = mrthInventoryComment(mrthInventoryAddItem('monitor'));
            spartMrthGoodIssue()
        },
        text: ['The girl smiled: "Happy hunting. And be careful - not everything valuable needs to be found."']
    },
    // Good luck wish (neutral and positive)
    luck: {
        callback: (obj) => {spartMrthGoodIssue()},
        text: ['The wanderer waved: "May the road be kind to you. If we meet again, you\'ll tell me what you found."']
    },
    // Final
    end: {},
};
_allMeetings['en']['portal_maze'] = {
    meta: { 
        name: 'Portal Maze', 
        values: { portalsPassed: 0 } // Portal counter
    },
    start: {
        text: [
            'It all started with a wrong step. I tripped over a stone, fell - and suddenly the ground disappeared beneath my feet. When I opened my eyes, I was surrounded by colorful gates leading into the unknown.',
            'The space between them defied normal laws: rivers of light flowed here, stones fell upward. I realized the only way out was to pass through a certain number of portals...'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed = 0; // Reset counter on start
        },
        choice: [
            { name: 'Step into the nearest portal', root: 'portal_1' }
        ]
    },
    // Portal 1
    portal_1: {
        text: [
            'I found myself in a forest with crystalline trees. Their leaves chimed in the wind like glass bells.',
            'The air was filled with a sweet scent that made me dizzy. Three portals glowed among the trunks: **scarlet**, **emerald** and **golden**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Scarlet portal', root: 'portal_2' },
            { name: 'Emerald portal', root: 'portal_3' },
            { name: 'Golden portal', root: 'portal_4' }
        ]
    },
    // Portal 2
    portal_2: {
        text: [
            'Scarlet light engulfed me. I stood on a floating island above an abyss. Clouds swirled below while giant winged fish flew around.',
            'Portals hovered here: **violet**, **turquoise** and **black**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Violet portal', root: 'portal_5' },
            { name: 'Turquoise portal', root: 'portal_6' },
            { name: 'Black portal', root: 'portal_7' }
        ]
    },
    // Portal 3
    portal_3: {
        text: [
            'Emerald light led me to a cave with walls covered in living moss. It whispered in an unknown language while an underground spring gurgled in the distance.',
            'Three exits shimmered by the water: **silver**, **turquoise** and **emerald**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Silver portal', root: 'portal_1' },
            { name: 'Turquoise portal', root: 'portal_6' },
            { name: 'Emerald portal', root: 'portal_3' },
        ]
    },
    // Portal 4
    portal_4: {
        text: [
            'The golden portal transported me to a desert with black sand and green sky. Two suns hung on the horizon, casting double shadows.',
            'On the dune stood portals: **violet**, **silver** and **black**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Violet portal', root: 'portal_5' },
            { name: 'Silver portal', root: 'portal_1' },
            { name: 'Black portal', root: 'portal_7' }
        ]
    },
    // Portal 5
    portal_5: {
        text: [
            'The violet portal brought me to a library with books written in invisible ink. They revealed themselves when I thought of a question.',
            'Three portals glowed between shelves: **scarlet**, **golden** and **turquoise**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Scarlet portal', root: 'portal_2' },
            { name: 'Golden portal', root: 'portal_4' },
            { name: 'Turquoise portal', root: 'portal_6' },
        ]
    },
    // Portal 6
    portal_6: {
        text: [
            'Turquoise light enveloped me, and I found myself in a city where buildings were made of ice. Shadowy inhabitants glided through streets, ignoring me.',
            'On the central square stood portals: **emerald**, **violet** and **silver**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1; 
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Emerald portal', root: 'portal_3' },
            { name: 'Violet portal', root: 'portal_5' },
            { name: 'Silver portal', root: 'portal_1' },
        ]
    },
    // Portal 7
    portal_7: {
        text: [
            'The black portal consumed me completely. I was in absolute darkness, where the only light came from my own thoughts materializing as fireflies.',
            'Suddenly three dots appeared in the distance: **turquoise**, **silver** and **emerald**.'
        ],
        callback: (obj) => { 
            obj.values.portalsPassed += 1;
            if(obj.values.portalsPassed >= 12) {obj.root = 'final'; return 'root'}
        },
        choice: [
            { name: 'Turquoise portal', root: 'portal_6' },
            { name: 'Silver portal', root: 'portal_1' },
            { name: 'Emerald portal', root: 'portal_3' },
        ]
    },
    // Final (after 12 portals)
    final: {
        callback: (obj) => {obj.result = mrthInventoryComment(mrthInventoryAddItem('poop')); spartMrthBadIssue()},
        text: [
            'After the twelfth transition, the world around me cracked like glass. Colors blended together as I fell to my knees, covering my face.',
            'When I dared to look, I saw a familiar landscape - the very stone I had tripped over. The portal behind me closed with a quiet sigh.',
            'I was free. All those portals were starting to make me sick...'
        ],
        choice: [
            { name: 'Move on', root: 'end' }
        ]
    },
    end: {}
};